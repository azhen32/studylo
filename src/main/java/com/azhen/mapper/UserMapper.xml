<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.azhen.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.azhen.domain.User" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="STATE" property="state" jdbcType="TINYINT" />
    <result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    <result column="COMMENT" property="comment" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="CHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />

    <collection property="videos" javaType="ArrayList" ofType="com.azhen.domain.Videos"
                column="ID" select="com.azhen.mapper.VideosMapper.selectByUserId">
    </collection>
   <collection property="userRoles" javaType="ArrayList"
                ofType="com.azhen.domain.UsersRoles" select="com.azhen.mapper.UsersRolesMapper.findByUserId" column="{id=ID}">
    </collection>
  </resultMap>

  <resultMap id="AllResultMap" type="com.azhen.domain.User" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="STATE" property="state" jdbcType="TINYINT" />
    <result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    <result column="COMMENT" property="comment" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="CHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <!--
      一对多关系
      ofType：指的是集合中元素的类型
     -->
    <collection property="items" ofType="com.azhen.domain.UsersRoles">
      <result column="USER_ID" property="userId" jdbcType="BIGINT" />
      <result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
    </collection>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, STATE, NICKNAME, COMMENT, PHONE, EMAIL, PASSWORD, CREATE_TIME, UPDATE_TIME
  </sql>
  <sql id="USERS_ROLES_Column_List" >
    USER_ID, ROLE_ID
  </sql>

  <!-- usersRoles 查询 -->
  <select id="findUserRoleById" parameterType="int" resultType="com.azhen.domain.UsersRoles">
    select * from users_roles where USER_ID = #{id}
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.azhen.domain.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExampleAll" resultMap="AllResultMap" parameterType="com.azhen.domain.UserExample">
    select
    <if test="distinct" >
      distinct
    </if>
    p.*,o.*
    from USER p LEFT JOIN users_roles o on o.USER_ID = p.ID
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from USER
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from USER
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.azhen.domain.UserExample" >
    delete from USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.azhen.domain.User" >
    <!-- 在sql语句执行之后执行,设置到实体的id -->
    <selectKey keyProperty="id" resultType="long" order="AFTER">
      SELECT LAST_INSERT_iD()
    </selectKey>
    insert into USER (ID, STATE, NICKNAME, 
      COMMENT, PHONE, EMAIL, 
      PASSWORD, CREATE_TIME, UPDATE_TIME
      )
    values (#{id,jdbcType=BIGINT}, #{state,jdbcType=TINYINT}, #{nickname,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.azhen.domain.User" >
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="nickname != null" >
        NICKNAME,
      </if>
      <if test="comment != null" >
        COMMENT,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.azhen.domain.UserExample" resultType="java.lang.Integer" >
    select count(*) from USER
    <!-- 如果传入参数不为空 -->
    <if test="_parameter != null" >
      <!-- 加入动态SQL片段 -->
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update USER
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.nickname != null" >
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        COMMENT = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update USER
    set ID = #{record.id,jdbcType=BIGINT},
      STATE = #{record.state,jdbcType=TINYINT},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=CHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.azhen.domain.User" >
    update USER
    <set >
      <if test="state != null" >
        STATE = #{state,jdbcType=TINYINT},
      </if>
      <if test="nickname != null" >
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        COMMENT = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.azhen.domain.User" >
    update USER
    set STATE = #{state,jdbcType=TINYINT},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=CHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>